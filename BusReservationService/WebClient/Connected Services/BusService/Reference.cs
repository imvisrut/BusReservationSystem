//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.BusService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bus", Namespace="http://schemas.datacontract.org/2004/07/BusService")]
    [System.SerializableAttribute()]
    public partial class Bus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusId {
            get {
                return this.BusIdField;
            }
            set {
                if ((this.BusIdField.Equals(value) != true)) {
                    this.BusIdField = value;
                    this.RaisePropertyChanged("BusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusName {
            get {
                return this.BusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusNameField, value) != true)) {
                    this.BusNameField = value;
                    this.RaisePropertyChanged("BusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dest {
            get {
                return this.DestField;
            }
            set {
                if ((object.ReferenceEquals(this.DestField, value) != true)) {
                    this.DestField = value;
                    this.RaisePropertyChanged("Dest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Src {
            get {
                return this.SrcField;
            }
            set {
                if ((object.ReferenceEquals(this.SrcField, value) != true)) {
                    this.SrcField = value;
                    this.RaisePropertyChanged("Src");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seat", Namespace="http://schemas.datacontract.org/2004/07/BusService")]
    [System.SerializableAttribute()]
    public partial class Seat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusId {
            get {
                return this.BusIdField;
            }
            set {
                if ((this.BusIdField.Equals(value) != true)) {
                    this.BusIdField = value;
                    this.RaisePropertyChanged("BusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAvailable {
            get {
                return this.IsAvailableField;
            }
            set {
                if ((this.IsAvailableField.Equals(value) != true)) {
                    this.IsAvailableField = value;
                    this.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatId {
            get {
                return this.SeatIdField;
            }
            set {
                if ((this.SeatIdField.Equals(value) != true)) {
                    this.SeatIdField = value;
                    this.RaisePropertyChanged("SeatId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BusService.IBusService")]
    public interface IBusService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusService/AddBus", ReplyAction="http://tempuri.org/IBusService/AddBusResponse")]
        void AddBus(string busName, string src, string dest, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusService/AddBus", ReplyAction="http://tempuri.org/IBusService/AddBusResponse")]
        System.Threading.Tasks.Task AddBusAsync(string busName, string src, string dest, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusService/GetBuses", ReplyAction="http://tempuri.org/IBusService/GetBusesResponse")]
        WebClient.BusService.Bus[] GetBuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusService/GetBuses", ReplyAction="http://tempuri.org/IBusService/GetBusesResponse")]
        System.Threading.Tasks.Task<WebClient.BusService.Bus[]> GetBusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusService/GetSeats", ReplyAction="http://tempuri.org/IBusService/GetSeatsResponse")]
        WebClient.BusService.Seat[] GetSeats(int busId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusService/GetSeats", ReplyAction="http://tempuri.org/IBusService/GetSeatsResponse")]
        System.Threading.Tasks.Task<WebClient.BusService.Seat[]> GetSeatsAsync(int busId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusService/BookSeat", ReplyAction="http://tempuri.org/IBusService/BookSeatResponse")]
        WebClient.BusService.Seat[] BookSeat(int seatId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusService/BookSeat", ReplyAction="http://tempuri.org/IBusService/BookSeatResponse")]
        System.Threading.Tasks.Task<WebClient.BusService.Seat[]> BookSeatAsync(int seatId, string userToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBusServiceChannel : WebClient.BusService.IBusService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusServiceClient : System.ServiceModel.ClientBase<WebClient.BusService.IBusService>, WebClient.BusService.IBusService {
        
        public BusServiceClient() {
        }
        
        public BusServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BusServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddBus(string busName, string src, string dest, string time) {
            base.Channel.AddBus(busName, src, dest, time);
        }
        
        public System.Threading.Tasks.Task AddBusAsync(string busName, string src, string dest, string time) {
            return base.Channel.AddBusAsync(busName, src, dest, time);
        }
        
        public WebClient.BusService.Bus[] GetBuses() {
            return base.Channel.GetBuses();
        }
        
        public System.Threading.Tasks.Task<WebClient.BusService.Bus[]> GetBusesAsync() {
            return base.Channel.GetBusesAsync();
        }
        
        public WebClient.BusService.Seat[] GetSeats(int busId) {
            return base.Channel.GetSeats(busId);
        }
        
        public System.Threading.Tasks.Task<WebClient.BusService.Seat[]> GetSeatsAsync(int busId) {
            return base.Channel.GetSeatsAsync(busId);
        }
        
        public WebClient.BusService.Seat[] BookSeat(int seatId, string userToken) {
            return base.Channel.BookSeat(seatId, userToken);
        }
        
        public System.Threading.Tasks.Task<WebClient.BusService.Seat[]> BookSeatAsync(int seatId, string userToken) {
            return base.Channel.BookSeatAsync(seatId, userToken);
        }
    }
}
